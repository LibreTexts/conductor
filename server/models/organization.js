/**
 * @file Defines a Mongoose schema for storing information about organizations and institutions
 *  using the Conductor platform, particularly those with a LibreTexts-hosted instance.
 * @author LibreTexts <info@libretexts.org>
 */

import mongoose from 'mongoose';

const OrganizationSchema = new mongoose.Schema({
  /**
   * Internal identifier of the Organization.
   */
  orgID: {
    type: String,
    required: true
  },
  /**
   * Organization's full name.
   */
  name: {
    type: String,
    required: true
  },
  /**
   * Organization's shortened name.
   */
  shortName: String,
  /**
   * Abbreviation of the Organization's name.
   */
  abbreviation: String,
  /**
   * Other names the Organization may be referred to by (internal use).
   */
  aliases: [String],
  /**
   * A large "cover photo" representing the Organization.
   */
  coverPhoto: String,
  /**
   * Organization's large/primary logo (URL).
   */
  largeLogo: String,
  /**
   * Organization's medium/secondary logo (URL).
   */
  mediumLogo: String,
  /**
   * Organization's smallest logo or icon (URL).
   */
  smallLogo: String,
  /**
   * An "About" page for the Organization (URL).
   */
  aboutLink: String,
  /**
   * Custom header text to display on the Campus Commons catalog, if desired.
   */
  commonsHeader: String,
  /**
   * Custom welcome text to display on the Campus Commons catalog, if desired.
   */
  commonsMessage: String,
  /**
   * The hex representation of the Organization's main branding color.
   */
  mainColor: String,
  /**
   * The default Lead for autogenerated Projects in the Organization (LibreTexts only, UUID).
   */
  defaultProjectLead: String,
}, {
  timestamps: true
});

const Organization = mongoose.model('Organization', OrganizationSchema);

export default Organization;
